There are multiple techniques that can be used to prevent the deadlock in this case. The deadlock is caused because process 1 needs resource 2 and process 2 needs resource 1, but both resources needed have already been acquired. One possible solution is having the function release its acquired resources if it does not receive all of its resources by a certain time (timeout). Additionally, you could use resource ordering, where resources have to be acquired in a fixed order before gathering other resources to fix circular dependencies (mutex1 before mutex2, and mutex2 before mutex3)